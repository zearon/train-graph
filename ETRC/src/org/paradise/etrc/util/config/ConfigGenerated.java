/**
 * DO NOT MODIFY THIS FILE!
 * 
 * This file is automatically generated by ConfigClassGen.
 * If you want to modify this class, please subclass it 
 * moke modification in the subclass.
 * 
 * @author Jeff Gong
 */
package org.paradise.etrc.util.config;

import com.zearon.util.config.ConfigBase;

public class ConfigGenerated extends ConfigBase {

	/**
	 * Static property fields declaration
	 */
	static final String prop_AutoLoadFile 			= "Auto_Load_Last_Edit_File"; 
	static final String prop_AutoLoadFilePath 			= "Auto_Load_File_Path"; 
	static final String prop_HttpProxyPort 			= "Http_Proxy_Port"; 

	ConfigGenerated() {
		super();
		
		Properties_File = "config.prop";
	}

	/**
	 * Initialization 
	 */
	protected void makeDefault() {
		super.makeDefault();
		
		// set default value of properties
		defaultProp.setProperty(prop_AutoLoadFile, "no");
		defaultProp.setProperty(prop_AutoLoadFilePath, "/sdfsdfsdfd");
		defaultProp.setProperty(prop_HttpProxyPort, "80");
	}
	
	/**
	 * property getter and setter methods
	 */
	 
	/* property getter and setter methods for AutoLoadFile */
	public Boolean getAutoLoadFile() {
		return afterGetAutoLoadFile(getValue(prop_AutoLoadFile, "false").equalsIgnoreCase("yes"));
	}
	public void setAutoLoadFile(Boolean value) {
		setValue(prop_AutoLoadFile, beforeSetAutoLoadFile(value) ? "yes" : "no");
	}
	protected Boolean afterGetAutoLoadFile(Boolean value) {
		return value;
	}
	public Boolean beforeSetAutoLoadFile(Boolean value) {
		return value;
	}
	
	/* property getter and setter methods for AutoLoadFilePath */
	public String getAutoLoadFilePath() {
		return afterGetAutoLoadFilePath(getValue(prop_AutoLoadFilePath));
	}
	public void setAutoLoadFilePath(String value) {
		setValue(prop_AutoLoadFilePath, beforeSetAutoLoadFilePath(value));
	}
	protected String afterGetAutoLoadFilePath(String value) {
		return value;
	}
	public String beforeSetAutoLoadFilePath(String value) {
		return value;
	}
	
	/* property getter and setter methods for HttpProxyPort */
	public int getHttpProxyPort() {
		int value = 0;
		try {
			value = Integer.parseInt(getValue(prop_HttpProxyPort));
		} catch (Exception e) {}
		return afterGetHttpProxyPort(value);
	}
	public void setHttpProxyPort(int value) {
		setValue(prop_HttpProxyPort, beforeSetHttpProxyPort(value) + "");
	}
	protected int afterGetHttpProxyPort(int value) {
		return value;
	}
	public int beforeSetHttpProxyPort(int value) {
		return value;
	}
	
}